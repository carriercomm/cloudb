<?xml version="1.0"?>
<project name="mnode" default="build" xmlns="http://nant.sf.net/release/0.92/nant.xsd">
	<include buildfile="../common.build" />
	<target name="build">
		<property name="solution-dir" value="${path::get-full-path(basedir + '/../')}"/>
		<nuget-get-dependencies solution-dir="${solution-dir}" project-dir="${basedir}" id="nuget.dependencies" allow-newer="true" />
		
		<nuget-get-files solution-dir="${basedir}" files-property="nuget.files" references-property="nuget.references" framework="net20">
			<dependencies refid="nuget.dependencies" />
		</nuget-get-files>
		
		<assemblyfileset id="all_refs" basedir="packages">
			<patternset refid="nuget.references" />
			<include name="System" />
			<include name="System.Configuration.Install" />
			<include name="System.ServiceProcess" />
		</assemblyfileset>
		
		<property name="sp.build.dir" value="${basedir}/bin/${name}_${build.number.version}${basedir.suffix}" readonly="true" />
		<property name="sp.build.obj" value="${basedir}/obj/${name}_${build.number.version}${basedir.suffix}" readonly="true" />
		<property name="build.dir" value="${sp.build.dir}/mnode" />
		<property name="build.obj" value="${sp.build.obj}/mnode" />
		<property name="main.build.dir" value="${build.dir}" readonly="true" />
		
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.obj}" />
		
		<if test="${system=='unix'}">
			<property name="define" value="${define};UNIX" />
		</if>
		<if test="${system == 'windows' or system == ''}">
			<property name="define" value="${define};WINDOWS" />
		</if>
		<if test="${debug}">
			<property name="define" value="${define};DEBUG" />
		</if>
		
		<echo message="building application mnode to ${path::get-full-path(output)}; libraries from ${path::get-full-path(libs)} ..." />
		<echo message="producing debug information" if="${debug}" />
		
		<property name="tmp.cs" value="${build.obj}/tmp-assembly-info.cs" />
		<asminfo output="${tmp.cs}" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
				<import namespace="System.Runtime.CompilerServices" />
				<import namespace="System.Runtime.InteropServices" />
				<import namespace="System.Security.Permissions" />
			</imports>
			<attributes>
				<attribute type="AssemblyTitleAttribute" value="mnode" />
				<attribute type="AssemblyVersionAttribute" value="${build.number.version}" />
				<attribute type="AssemblyDescriptionAttribute" value="CloudB Machine Node" />
				<attribute type="AssemblyCopyrightAttribute" value="2010-2012 (c) Deveel" />
				<attribute type="ComVisibleAttribute" value="false" />
				<attribute type="CLSCompliantAttribute" value="true" />
				<attribute type="SecurityPermissionAttribute" value="SecurityAction.RequestMinimum, UnmanagedCode = true" asis="true" />
			</attributes>
		</asminfo>
		
		<csc target="exe" 
			output="${output}/mnode.exe" 
			debug="${build.debug}" 
			define="${define}" 
			optimize="${not build.debug}" 
			platform="${platform}" 
			keyfile="mnode.snk">
			<sources basedir="${sources}">
				<exclude name="Properties/AssemblyInfo.cs" />
				<include name="${tmp.cs}"/>
				<include name="Deveel.Data.Net/*.cs" />
			</sources>
			<references refid="all_refs"/>
		</csc>
		
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="${build.obj}">
				<include name="${name}.dll" />
				<include name="${name}.pdb" />
				<include name="${name}.xml" />
			</fileset>
		</copy>
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="packages">
				<patternset refid="nuget.files" />
			</fileset>
		</copy>
		<copy todir="${build.dir}" flatten="true">
			<fileset basedir="${basedir}">
				<include name="*.dll" />
				<include name="*.xml" />
			</fileset>
		</copy>
		
		<copy file="${conf}/node.conf" todir="${build.dir}" overwrite="true" />
		<copy file="${conf}/network.conf" todir="${build.dir}" overwrite="true" />
		
		<zip zipfile="${sp.build.dir}/SpotiFire-${build.number.version}.zip">
			<fileset basedir="${build.dir}" prefix="SpotiFire">
				<include name="**/*" />
			</fileset>
		</zip>
	</target>
	<target name="-package-bin" depends="build" />
	<target name="-package-src">
		<tar destfile="${dist-path}/${package.name}.tar.gz" compression="GZip">
			<fileset basedir="${sources}">
				<include name="Properties/AssemblyInfo.cs" />
				<include name="Deveel.Data.Net/*.cs" />
				<include name="mnode.build" />
				<include name="mnode.snk" />
			</fileset>
		</tar>
	</target>
	<target name="clean">
		<delete file="${output}/mnode.exe" />
		<delete file="${output}/deveel-cli.dll" if="${standalone}" />
		<delete file="${output}/node.conf" />
		<delete file="${output}/network.conf" if="${standalone}" />
	</target>
</project>
